package com.mobile.store;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Assertions.assertThrows;

import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManager;
import org.springframework.boot.test.context.SpringBootTest;
import com.mobile.store.dto.Customer;
import com.mobile.store.dto.Product;
import com.mobile.store.dto.Wishlist;
import com.mobile.store.exception.CartItemException;
import com.mobile.store.exception.CustomerException;
import com.mobile.store.exception.ProductException;
import com.mobile.store.exception.WishlistException;
import com.mobile.store.service.WishlistService;

@SpringBootTest
public class CustomerServiceTest {

	
	@Autowired(required=true)
	WishlistService wishlistService;
	
	//@Autowired(required=true)
	//TestEntityManager entityManager;
	
	@Test
	public void createWishlistTest() throws WishlistException, CustomerException, ProductException {
//		Customer customer = entityManager.find(Customer.class, 1);
//		Product product = entityManager.find(Product.class, 1);
     	Wishlist wishlist = new Wishlist();
		Integer a =1;
		Integer b = 1;
		wishlist.setCustomerId(a);
		wishlist.setProductId(b);
		
		//Wishlist saveWishlist = wishlistRepo.save(wishlist);
		//assertTrue(saveWishlist.getWishlistId()>0);
		assertEquals("product added sucessfully", this.wishlistService.createWishlist(wishlist));
		assertNotNull(this.wishlistService.getWishlist(a));
		//assertThrows(WishlistException.class, () ->this.wishlistService.createWishlist(wishlist));
		assertEquals("product delete sucessfully", this.wishlistService.removeProductFromWishlist(a, b));
	}

	@Test
	public void removeProductFromWishlistTest() throws WishlistException, CustomerException, ProductException {
//		Customer customer = entityManager.find(Customer.class, 1);
//		Product product = entityManager.find(Product.class, 1);
     	Wishlist wishlist = new Wishlist();
		Integer a =1;
		Integer b = 1;
		wishlist.setCustomerId(a);
		wishlist.setProductId(b);
		
		//Wishlist saveWishlist = wishlistRepo.save(wishlist);
		//assertTrue(saveWishlist.getWishlistId()>0);
		assertEquals("product added sucessfully", this.wishlistService.createWishlist(wishlist));
		//assertThrows(WishlistException.class, () ->this.wishlistService.createWishlist(wishlist));
		assertEquals("product delete sucessfully", this.wishlistService.removeProductFromWishlist(a, b));

	}
	@Test
	public void getWishlistTest() throws WishlistException, CustomerException, ProductException {
//		Customer customer = entityManager.find(Customer.class, 1);
//		Product product = entityManager.find(Product.class, 1);
     	Wishlist wishlist = new Wishlist();
		Integer a =1;
		Integer b = 1;
		wishlist.setCustomerId(a);
		wishlist.setProductId(b);
		
		//Wishlist saveWishlist = wishlistRepo.save(wishlist);
		//assertTrue(saveWishlist.getWishlistId()>0);
		assertEquals("product added sucessfully", this.wishlistService.createWishlist(wishlist));
		//assertThrows(WishlistException.class, () ->this.wishlistService.createWishlist(wishlist));
		assertNotNull(this.wishlistService.getWishlist(a));
		assertEquals("product delete sucessfully", this.wishlistService.removeProductFromWishlist(a, b));
	}
	
	@Test
	public void addProductTOCartFromWishlist() throws WishlistException, CustomerException, ProductException, CartItemException {
//		Customer customer = entityManager.find(Customer.class, 1);
//		Product product = entityManager.find(Product.class, 1);
     	Wishlist wishlist = new Wishlist();
		Integer a =1;
		Integer b = 1;
		wishlist.setCustomerId(a);
		wishlist.setProductId(b);
		
		//Wishlist saveWishlist = wishlistRepo.save(wishlist);
		//assertTrue(saveWishlist.getWishlistId()>0);
		assertEquals("product added sucessfully", this.wishlistService.createWishlist(wishlist));
		//assertThrows(WishlistException.class, () ->this.wishlistService.createWishlist(wishlist));
		assertEquals("product added to cart sucessfully",this.wishlistService.addProductTOCartFromWishlist(a, b));
		assertEquals("product delete sucessfully", this.wishlistService.removeProductFromWishlist(a, b));
	}
}
